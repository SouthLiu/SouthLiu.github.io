{"version":3,"sources":["components/Input/index.tsx","components/List/index.tsx","components/typings/index.ts","reduex.ts","App.tsx","index.tsx"],"names":["Inputs","props","addTodo","inputRef","useRef","useState","inputVal","setInputVal","style","marginBottom","ref","width","onClick","value","current","state","console","log","id","Date","getTime","contant","setValue","memo","Index","todoList","delTodo","length","map","item","index","display","alignItems","justifyContent","title","cancelText","okText","onConfirm","CloseCircleOutlined","cursor","marginLeft","ACTION_TYPE","todoReducer","action","type","payload","INIT_TODO","ADD_TODO","DEL_TODO","filter","init","initTodoList","App","useReducer","dispatch","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","useCallback","data","Input","List","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAQA,SAASA,EAAOC,GAAgB,IACtBC,EAAYD,EAAZC,QACFC,EAAWC,iBAAY,MAFA,EAGGC,mBAAiB,IAHpB,mBAGtBC,EAHsB,KAGZC,EAHY,KAoB7B,OACE,sBAAKC,MAAO,CAAEC,aAAc,IAA5B,UACE,cAAC,IAAD,CAAOC,IAAKP,EAAUK,MAAO,CAAEG,MAAO,OACtC,cAAC,IAAD,CAAQC,QAlBI,WAAa,IACnBC,EAAUV,EAASW,QAAQC,MAA3BF,MACRN,GAAY,kBAAMM,KAEdP,IAAaO,GACfG,QAAQC,IAAI,sBAGdf,EAAQ,CACNgB,IAAI,IAAIC,MAAOC,UACfC,QAASR,IAEXV,EAASW,QAAQQ,SAAS,KAMxB,6BAKSC,qBAAKvB,G,gBC1BpB,SAASwB,EAAMvB,GAA8B,IACnCwB,EAAsBxB,EAAtBwB,SAAUC,EAAYzB,EAAZyB,QAMlB,OACE,qBAAKlB,MAAO,CAAEG,MAAO,KAArB,SAEIc,EAASE,OAAS,GAAKF,EAASG,KAAI,SAACC,EAAMC,GACzC,OACE,sBAAmBtB,MAAO,CAAEuB,QAAS,OAAQC,WAAY,SAASC,eAAgB,iBAAlF,UACE,+BAAQJ,EAAKR,UAEb,cAAC,IAAD,CAAYa,MAAM,4BAAQC,WAAW,eAAKC,OAAO,eAAKC,UAAW,kBAZvDnB,EAY0EW,EAAKX,QAXnGQ,EAAQR,GADW,IAACA,GAYV,SACE,cAACoB,EAAA,EAAD,CAAqB9B,MAAO,CAAE+B,OAAQ,UAAWC,WAAY,UAJvDX,EAAKX,SAcZK,ICtBHkB,EDsBGlB,iBAAKC,I,SCtBRiB,K,qBAAAA,E,mBAAAA,E,oBAAAA,M,+BCZCC,EAAc,SAAC3B,EAAe4B,GAA6B,IAC9DC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QACd,OAAQD,GACN,KAAKH,EAAYK,UAGf,OAFA9B,QAAQC,IAAI,SAAUF,GACtBC,QAAQC,IAAI,UAAW0B,GAChB,CACLlB,SAAUoB,GAGd,KAAKJ,EAAYM,SACf,OAAO,2BACFhC,GADL,IAEEU,SAAS,GAAD,mBAAMV,EAAMU,UAAZ,CAAsBoB,MAGlC,KAAKJ,EAAYO,SACf,OAAO,2BACFjC,GADL,IAEEU,SAAUV,EAAMU,SAASwB,QAAO,SAAApB,GAAI,OAAIA,EAAKX,KAAO2B,OAGxD,QACE,OAAO9B,IClBb,SAASmC,EAAKC,GACZ,MAAO,CACL1B,SAAU0B,GA2CCC,MAvCf,WAAgB,IAAD,EACaC,qBAAWX,EAAa,GAAIQ,GADzC,mBACNnC,EADM,KACCuC,EADD,KAGbC,qBAAU,WACR,IAAM9B,EAAW+B,KAAKC,MAAMC,aAAaC,QAAQ,aAAe,MAChEL,EAAS,CACPV,KAAMH,EAAYK,UAClBD,QAASpB,MAEV,IAEH8B,qBAAU,WACRG,aAAaE,QAAQ,WAAYJ,KAAKK,UAAU9C,EAAMU,UAAY,SACjE,CAACV,EAAMU,WAEV,IAAMvB,EAAU4D,uBACd,SAACC,GACCT,EAAS,CACPV,KAAMH,EAAYM,SAClBF,QAASkB,MAEV,IAGCrC,EAAUoC,uBAAY,SAAC5C,GACzBoC,EAAS,CACPV,KAAMH,EAAYO,SAClBH,QAAS3B,MAEZ,IAEH,OACE,qCACE,cAAC8C,EAAD,CAAO9D,QAASA,IAChB,cAAC+D,EAAD,CAAMxC,SAAUV,EAAMU,SAAUC,QAASA,QC3C/CwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.74cd8539.chunk.js","sourcesContent":["import React, { memo, useRef, useState } from 'react'\r\nimport { Button, Input } from 'antd'\r\nimport { ITodo } from '../typings'\r\n\r\ninterface IProps {\r\n  addTodo: (data: ITodo) => void;\r\n}\r\n\r\nfunction Inputs(props: IProps) {\r\n  const { addTodo } = props\r\n  const inputRef = useRef<any>(null)\r\n  const [inputVal, setInputVal] = useState<string>('')\r\n\r\n  const addItem = (): void => {\r\n    const { value } = inputRef.current.state\r\n    setInputVal(() => value)\r\n\r\n    if (inputVal === value) {\r\n      console.log('重复值')\r\n    }\r\n\r\n    addTodo({\r\n      id: new Date().getTime(),\r\n      contant: value\r\n    })\r\n    inputRef.current.setValue('')\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginBottom: 20 }}>\r\n      <Input ref={inputRef} style={{ width: 300 }} />\r\n      <Button onClick={addItem}>添加</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(Inputs)\r\n","import React, { memo, ReactElement } from 'react'\r\nimport { ITodo } from '../typings'\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { Popconfirm } from 'antd';\r\n\r\ninterface IProps {\r\n  todoList: ITodo[];\r\n  delTodo: (id: number) => void;\r\n}\r\n\r\nfunction Index(props: IProps): ReactElement {\r\n  const { todoList, delTodo } = props\r\n\r\n  const handleDelete = (id: number): void => {\r\n    delTodo(id)\r\n  }\r\n\r\n  return (\r\n    <div style={{ width: 350 }}>\r\n      {\r\n        todoList.length > 0 && todoList.map((item, index) => {\r\n          return (\r\n            <div key={item.id} style={{ display: 'flex', alignItems: 'center',justifyContent: 'space-between' }}>\r\n              <span>{ item.contant }</span>\r\n\r\n              <Popconfirm title=\"确定删除?\" cancelText=\"取消\" okText=\"确定\" onConfirm={() => handleDelete(item.id)}>\r\n                <CloseCircleOutlined style={{ cursor: 'pointer', marginLeft: 15 }} />\r\n              </Popconfirm>\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(Index)\r\n","export interface ITodo {\r\n  id: number;\r\n  contant: string;\r\n}\r\n\r\nexport interface IState {\r\n  todoList: ITodo[]\r\n}\r\n\r\nexport interface IAction {\r\n  type: ACTION_TYPE;\r\n  payload: ITodo | ITodo[] | number;\r\n}\r\n\r\nexport enum ACTION_TYPE {\r\n  INIT_TODO = 'initTodo',\r\n  ADD_TODO = 'addTodo',\r\n  DEL_TODO = 'delTodo'\r\n}","import { ACTION_TYPE, ITodo, IAction, IState } from \"./components/typings\";\r\n\r\nexport const todoReducer = (state: IState, action: IAction): IState => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case ACTION_TYPE.INIT_TODO:\r\n      console.log('state:', state)\r\n      console.log('action:', action)\r\n      return {\r\n        todoList: payload as ITodo[]\r\n      }\r\n\r\n    case ACTION_TYPE.ADD_TODO:\r\n      return {\r\n        ...state,\r\n        todoList: [...state.todoList, payload as ITodo]\r\n      }\r\n\r\n    case ACTION_TYPE.DEL_TODO:\r\n      return {\r\n        ...state,\r\n        todoList: state.todoList.filter(item => item.id !== payload)\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { useCallback, useReducer, useEffect } from 'react';\r\nimport Input from './components/Input';\r\nimport List from './components/List'\r\nimport { ACTION_TYPE, ITodo } from './components/typings';\r\nimport './App.css';\r\nimport { todoReducer } from './reduex';\r\n\r\nfunction init(initTodoList: ITodo[]) {\r\n  return {\r\n    todoList: initTodoList\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  const [state, dispatch] = useReducer(todoReducer, [], init)\r\n\r\n  useEffect(() => {\r\n    const todoList = JSON.parse(localStorage.getItem('todoList') || '[]')\r\n    dispatch({\r\n      type: ACTION_TYPE.INIT_TODO,\r\n      payload: todoList\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('todoList', JSON.stringify(state.todoList || '[]'))\r\n  }, [state.todoList])\r\n\r\n  const addTodo = useCallback(\r\n    (data: ITodo): void => {\r\n      dispatch({\r\n        type: ACTION_TYPE.ADD_TODO,\r\n        payload: data\r\n      })\r\n    }, []\r\n  )\r\n\r\n  const delTodo = useCallback((id: number): void => {\r\n      dispatch({\r\n        type: ACTION_TYPE.DEL_TODO,\r\n        payload: id\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Input addTodo={addTodo} />\r\n      <List todoList={state.todoList} delTodo={delTodo} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}